{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/blackbird/Desktop/bootcampdev/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.decription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // on doit indiquer les chemins pour que cela fonctionne grâce à la fonction ci dessous\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/blackbird/Desktop/bootcampdev/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","image","title","address","decription"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;;;KAXSL,a;;AAqDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.image}\n      title={props.title}\n      address={props.address}\n      description={props.decription}\n    />\n  );\n}\n\n// on doit indiquer les chemins pour que cela fonctionne grâce à la fonction ci dessous\n\nexport async function getStaticPaths() {\n\n  const client = await MongoClient.connect('mongodb+srv://Yasser:carI3qYQOECxtEW1@cluster0.gl9e31c.mongodb.net/meetups?retryWrites=true&w=majority');\n        const db = client.db() ;\n\n        const meetupsCollection = db.collection('meetups');\n\n        const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n        client.close();\n\n    return {\n        fallback: false, // on met false car on a mis ici toute la listes des chemins possibles\n        paths: meetups.map((meetup) => ({\n          params: { meetupId: meetup._id.toString() },\n        })),\n    }\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId  ;\n\n  const client = await MongoClient.connect('mongodb+srv://Yasser:carI3qYQOECxtEW1@cluster0.gl9e31c.mongodb.net/meetups?retryWrites=true&w=majority');\n        const db = client.db() ;\n\n        const meetupsCollection = db.collection('meetups');\n\n        const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n        client.close();\n\n\n  return {\n    props: {\n      meetupData: selectedMeetup\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}