{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/blackbird/Desktop/bootcampdev/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nvar DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2832&q=80\",\n  adress: \"Some address 5, 12345 Some City\",\n  decription: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://images.unsplash.com/photo-1524178232363-1fb2b075b655?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80\",\n  adress: \"Some address 10, 12345 Some City\",\n  decription: \"This is a second meetup!\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n} // la fonction ci-dessous permet d'ajouter les données dans l'HTML directement par le server, c'est quand on build le projet que cela est fait\n\n\n_c = HomePage;\n// la fonction ci dessous permet de regénérer la page par le serveur à chaque requête, ici ce n'est pas nécessaire on prendra en solution la fonction ci dessus.\n// export async function getServerSideProps(context){\n//     const req = context.req;\n//     const res = context.res;\n//     // fetch data from an API\n//     return {\n//         props: DUMMY_MEETUPS\n//     };\n// }\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/blackbird/Desktop/bootcampdev/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","adress","decription","HomePage","props","meetups"],"mappings":";;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,IAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,MAAM,EAAE,iCALV;AAMEC,EAAAA,UAAU,EAAE;AANd,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,MAAM,EAAE,kCALV;AAMEC,EAAAA,UAAU,EAAE;AANd,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;KAJSF,Q;AAgCT;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"A First Meetup\",\n    image:\n      \"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2832&q=80\",\n    adress: \"Some address 5, 12345 Some City\",\n    decription: \"This is a first meetup!\",\n  },\n  {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image:\n      \"https://images.unsplash.com/photo-1524178232363-1fb2b075b655?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80\",\n    adress: \"Some address 10, 12345 Some City\",\n    decription: \"This is a second meetup!\",\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// la fonction ci-dessous permet d'ajouter les données dans l'HTML directement par le server, c'est quand on build le projet que cela est fait\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Yasser:carI3qYQOECxtEW1@cluster0.gl9e31c.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 10, // ici revalidate permet de regénérer toutes les 10 secondes le tableau de données récupéré si les données changent régulièrement, sinon le problème qu'il y aura sera que le tableau sera le même que celui générée par le serveur la première fois\n  };\n}\n\n// la fonction ci dessous permet de regénérer la page par le serveur à chaque requête, ici ce n'est pas nécessaire on prendra en solution la fonction ci dessus.\n\n// export async function getServerSideProps(context){\n\n//     const req = context.req;\n//     const res = context.res;\n\n//     // fetch data from an API\n//     return {\n//         props: DUMMY_MEETUPS\n//     };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}